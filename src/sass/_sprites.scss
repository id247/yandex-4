/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;

At the bottom of this section, we provide information about the spritesheet itself
$spritesheet: width height image $spritesheet-sprites;
*/
$cloud-left-name: 'cloud-left';
$cloud-left-x: 0px;
$cloud-left-y: 0px;
$cloud-left-offset-x: 0px;
$cloud-left-offset-y: 0px;
$cloud-left-width: 278px;
$cloud-left-height: 168px;
$cloud-left-total-width: 426px;
$cloud-left-total-height: 346px;
$cloud-left-image: '../images/sprite.png';
$cloud-left: (0px, 0px, 0px, 0px, 278px, 168px, 426px, 346px, '../images/sprite.png', 'cloud-left', );
$cloud-right-name: 'cloud-right';
$cloud-right-x: 0px;
$cloud-right-y: 168px;
$cloud-right-offset-x: 0px;
$cloud-right-offset-y: -168px;
$cloud-right-width: 239px;
$cloud-right-height: 178px;
$cloud-right-total-width: 426px;
$cloud-right-total-height: 346px;
$cloud-right-image: '../images/sprite.png';
$cloud-right: (0px, 168px, 0px, -168px, 239px, 178px, 426px, 346px, '../images/sprite.png', 'cloud-right', );
$icon-bell-name: 'icon-bell';
$icon-bell-x: 278px;
$icon-bell-y: 164px;
$icon-bell-offset-x: -278px;
$icon-bell-offset-y: -164px;
$icon-bell-width: 52px;
$icon-bell-height: 47px;
$icon-bell-total-width: 426px;
$icon-bell-total-height: 346px;
$icon-bell-image: '../images/sprite.png';
$icon-bell: (278px, 164px, -278px, -164px, 52px, 47px, 426px, 346px, '../images/sprite.png', 'icon-bell', );
$icon-bg-name: 'icon-bg';
$icon-bg-x: 278px;
$icon-bg-y: 119px;
$icon-bg-offset-x: -278px;
$icon-bg-offset-y: -119px;
$icon-bg-width: 69px;
$icon-bg-height: 45px;
$icon-bg-total-width: 426px;
$icon-bg-total-height: 346px;
$icon-bg-image: '../images/sprite.png';
$icon-bg: (278px, 119px, -278px, -119px, 69px, 45px, 426px, 346px, '../images/sprite.png', 'icon-bg', );
$icon-block-name: 'icon-block';
$icon-block-x: 330px;
$icon-block-y: 164px;
$icon-block-offset-x: -330px;
$icon-block-offset-y: -164px;
$icon-block-width: 44px;
$icon-block-height: 44px;
$icon-block-total-width: 426px;
$icon-block-total-height: 346px;
$icon-block-image: '../images/sprite.png';
$icon-block: (330px, 164px, -330px, -164px, 44px, 44px, 426px, 346px, '../images/sprite.png', 'icon-block', );
$icon-book-name: 'icon-book';
$icon-book-x: 347px;
$icon-book-y: 119px;
$icon-book-offset-x: -347px;
$icon-book-offset-y: -119px;
$icon-book-width: 54px;
$icon-book-height: 40px;
$icon-book-total-width: 426px;
$icon-book-total-height: 346px;
$icon-book-image: '../images/sprite.png';
$icon-book: (347px, 119px, -347px, -119px, 54px, 40px, 426px, 346px, '../images/sprite.png', 'icon-book', );
$icon-devices-name: 'icon-devices';
$icon-devices-x: 375px;
$icon-devices-y: 211px;
$icon-devices-offset-x: -375px;
$icon-devices-offset-y: -211px;
$icon-devices-width: 39px;
$icon-devices-height: 46px;
$icon-devices-total-width: 426px;
$icon-devices-total-height: 346px;
$icon-devices-image: '../images/sprite.png';
$icon-devices: (375px, 211px, -375px, -211px, 39px, 46px, 426px, 346px, '../images/sprite.png', 'icon-devices', );
$icon-rocket-name: 'icon-rocket';
$icon-rocket-x: 327px;
$icon-rocket-y: 211px;
$icon-rocket-offset-x: -327px;
$icon-rocket-offset-y: -211px;
$icon-rocket-width: 48px;
$icon-rocket-height: 49px;
$icon-rocket-total-width: 426px;
$icon-rocket-total-height: 346px;
$icon-rocket-image: '../images/sprite.png';
$icon-rocket: (327px, 211px, -327px, -211px, 48px, 49px, 426px, 346px, '../images/sprite.png', 'icon-rocket', );
$icon-shield-name: 'icon-shield';
$icon-shield-x: 278px;
$icon-shield-y: 211px;
$icon-shield-offset-x: -278px;
$icon-shield-offset-y: -211px;
$icon-shield-width: 49px;
$icon-shield-height: 49px;
$icon-shield-total-width: 426px;
$icon-shield-total-height: 346px;
$icon-shield-image: '../images/sprite.png';
$icon-shield: (278px, 211px, -278px, -211px, 49px, 49px, 426px, 346px, '../images/sprite.png', 'icon-shield', );
$logotype-name: 'logotype';
$logotype-x: 278px;
$logotype-y: 0px;
$logotype-offset-x: -278px;
$logotype-offset-y: 0px;
$logotype-width: 148px;
$logotype-height: 52px;
$logotype-total-width: 426px;
$logotype-total-height: 346px;
$logotype-image: '../images/sprite.png';
$logotype: (278px, 0px, -278px, 0px, 148px, 52px, 426px, 346px, '../images/sprite.png', 'logotype', );
$next-round-name: 'next-round';
$next-round-x: 345px;
$next-round-y: 52px;
$next-round-offset-x: -345px;
$next-round-offset-y: -52px;
$next-round-width: 67px;
$next-round-height: 67px;
$next-round-total-width: 426px;
$next-round-total-height: 346px;
$next-round-image: '../images/sprite.png';
$next-round: (345px, 52px, -345px, -52px, 67px, 67px, 426px, 346px, '../images/sprite.png', 'next-round', );
$next-name: 'next';
$next-x: 278px;
$next-y: 260px;
$next-offset-x: -278px;
$next-offset-y: -260px;
$next-width: 31px;
$next-height: 56px;
$next-total-width: 426px;
$next-total-height: 346px;
$next-image: '../images/sprite.png';
$next: (278px, 260px, -278px, -260px, 31px, 56px, 426px, 346px, '../images/sprite.png', 'next', );
$prev-round-name: 'prev-round';
$prev-round-x: 278px;
$prev-round-y: 52px;
$prev-round-offset-x: -278px;
$prev-round-offset-y: -52px;
$prev-round-width: 67px;
$prev-round-height: 67px;
$prev-round-total-width: 426px;
$prev-round-total-height: 346px;
$prev-round-image: '../images/sprite.png';
$prev-round: (278px, 52px, -278px, -52px, 67px, 67px, 426px, 346px, '../images/sprite.png', 'prev-round', );
$prev-name: 'prev';
$prev-x: 309px;
$prev-y: 260px;
$prev-offset-x: -309px;
$prev-offset-y: -260px;
$prev-width: 31px;
$prev-height: 56px;
$prev-total-width: 426px;
$prev-total-height: 346px;
$prev-image: '../images/sprite.png';
$prev: (309px, 260px, -309px, -260px, 31px, 56px, 426px, 346px, '../images/sprite.png', 'prev', );
$spritesheet-width: 426px;
$spritesheet-height: 346px;
$spritesheet-image: '../images/sprite.png';
$spritesheet-sprites: ($cloud-left, $cloud-right, $icon-bell, $icon-bg, $icon-block, $icon-book, $icon-devices, $icon-rocket, $icon-shield, $logotype, $next-round, $next, $prev-round, $prev, );
$spritesheet: (426px, 346px, '../images/sprite.png', $spritesheet-sprites, );

/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}

Example usage in HTML:

`display: block` sprite:
<div class="icon-home"></div>

To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:

// CSS
.icon {
  display: inline-block;
}

// HTML
<i class="icon icon-home"></i>
*/
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(#{$sprite-image});
}

@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

/*
The `sprites` mixin generates identical output to the CSS template
  but can be overridden inside of SCSS

@include sprites($spritesheet-sprites);
*/
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}
